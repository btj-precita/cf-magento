AWSTemplateFormatVersion: "2010-09-09"
Description: NFS (Network File System) Template
Parameters:
  AccessCIDR:
    Default: 10.2.0.0/16
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: Must be a valid IP range in x.x.x.x/x notation
    Type: String
  KeyPair:
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
  QSS3BucketName:
    AllowedPattern: ^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: ^[0-9a-zA-Z-/]*$
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slash (/).
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  DeployerAccessKey:
    Description: Access key of deployer
    Type: String
  DeployerSecretKey:
    Description: Secret key of deployer
    Type: String
  VPCID:
    Description: VPC ID
    Type: AWS::EC2::VPC::Id
  NFSServerInstanceType:
    AllowedValues:
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    ConstraintDescription: Choose an instance type.
    Default: t2.micro
    Description: Web Server node instance type
    Type: String
  NFSServerSubnets:
    ConstraintDescription: must be list of existing subnet Ids
    Description: A list of subnet identifiers of Amazon VPCs where the WebServer Autoscaling
      would be launched.
    Type: List<AWS::EC2::Subnet::Id>
  SlackWebhookUrl:
    Description: Slack Webhook URL for sending Monit notification
    Type: String
Mappings:
  AWSAMIRegionMap:
    AMI:
      AMZNLINUXHVM: amzn-ami-hvm-2017.09.1.20180108-x86_64-gp2
    ap-northeast-1:
      AMZNLINUXHVM: ami-33c25b55
    ap-northeast-2:
      AMZNLINUXHVM: ami-d9b616b7
    ap-south-1:
      AMZNLINUXHVM: ami-fedb8f91
    ap-southeast-1:
      AMZNLINUXHVM: ami-889cecf4
    ap-southeast-2:
      AMZNLINUXHVM: ami-ccab56ae
    ca-central-1:
      AMZNLINUXHVM: ami-61f97c05
    eu-central-1:
      AMZNLINUXHVM: ami-0fc85a60
    eu-west-1:
      AMZNLINUXHVM: ami-e487179d
    eu-west-2:
      AMZNLINUXHVM: ami-51809835
    sa-east-1:
      AMZNLINUXHVM: ami-1226647e
    us-east-1:
      AMZNLINUXHVM: ami-cb9ec1b1
    us-east-2:
      AMZNLINUXHVM: ami-caaf84af
    us-west-1:
      AMZNLINUXHVM: ami-95eeeef5
    us-west-2:
      AMZNLINUXHVM: ami-32cf7b4a
Resources:
  NFSServerMainLogGroup:
    Type: AWS::Logs::LogGroup
  NFSServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: NFS Server Security Group
      VpcId: !Ref VPCID
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: !Ref AccessCIDR
      - IpProtocol: tcp
        FromPort: '2049'
        ToPort: '2049'
        CidrIp: !Ref AccessCIDR
      - IpProtocol: udp
        FromPort: '2049'
        ToPort: '2049'
        CidrIp: !Ref AccessCIDR
  NFSServerIamInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogStreams
            Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${NFSServerMainLogGroup}:*
          - Effect: Allow
            Action:
            - s3:GetObject
            Resource: '*'
        PolicyName: Instance-Limited-Role
  NFSServerIamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
      - !Ref NFSServerIamInstanceRole
  PrecitaSharedVolume:
    Type: AWS::EC2::Volume
    Properties:
      AvailabilityZone: !GetAtt NFSServer.AvailabilityZone
      Size: 10
      Tags:
        -
          Key: Name
          Value: PrecitaSharedVolume
      VolumeType: gp2
    DeletionPolicy: Snapshot
  NFSServer:
    Type: "AWS::EC2::Instance"
    Metadata:
      Comment: Install a NFS server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: S3
          roleName: !Ref NFSServerIamInstanceRole
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              nfs-utils: []
              awslogs: []
              monit: []
              python35: []
          files:
            /etc/awslogs/awslogs.conf:
              content: !Sub |
                [general]
                state_file= /var/log/agent-state
                [/home/ec2-user/misc/install]
                file = /var/log/cloud-init-output.log
                log_group_name = ${NFSServerMainLogGroup}
                log_stream_name = {instance_id}/nfs/install.log
              mode: '000400'
              owner: root
              group: root
            /etc/awslogs/awscli.conf:
              content: !Sub |
                [plugins]
                cwlogs = cwlogs
                [default]
                region = ${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: '000400'
              owner: root
              group: root
            /etc/ssh_banner:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/banner_message_nfs_server.txt
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /tmp/format_shared_disk.sh:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/format_shared_disk.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /tmp/install_nfs_server.sh:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/install_nfs_server.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /tmp/configure_nfs_server.sh:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/configure_nfs_server.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /tmp/configure_monit_monitor_nfs_server.sh:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/configure_monit_monitor_nfs_server.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /usr/local/bin/monit_notify_slack:
              source: !Sub https://${QSS3BucketName}.s3.amazonaws.com/${QSS3KeyPrefix}scripts/monit_notify_slack.sh
              mode: '000644'
              owner: root
              group: root
              authentication: S3AccessCreds
            /etc/monit/slack-url:
              content: !Sub |
                ${SlackWebhookUrl}
              mode: '000644'
              owner: root
              group: root
            /home/ec2-user/.aws/credentials:
              content: !Sub |
                [default]
                aws_access_key_id=${DeployerAccessKey}
                aws_secret_access_key=${DeployerSecretKey}
              mode: '000600'
              owner: ec2-user
              group: ec2-user
            /home/ec2-user/.aws/config:
              content: !Sub |
                [default]
                region=${AWS::Region}
              mode: '000600'
              owner: ec2-user
              group: ec2-user
            /tmp/params.txt:
              content: !Sub AllowedHost|${AccessCIDR}
              mode: '000440'
              owner: root
              group: root
          services:
            sysvinit:
              nfs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/exports
                packages:
                  yum:
                  - nfs-utils
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
              awslogs:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/awslogs/awslogs.conf
                packages:
                  yum:
                  - awslogs
    Properties:
      KeyName: !Ref KeyPair
      IamInstanceProfile: !Ref NFSServerIamInstanceProfile
      ImageId:
        !FindInMap
        - AWSAMIRegionMap
        - !Ref AWS::Region
        - AMZNLINUXHVM
      InstanceType: !Ref NFSServerInstanceType
      SubnetId:
        !Select
        - '0'
        - !Ref NFSServerSubnets
      SecurityGroupIds:
      - !Ref NFSServerSecurityGroup
      UserData:
        !Base64
          Fn::Sub: |
            #!/bin/bash
            /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource NFSServer --region ${AWS::Region}
            chmod a+x /tmp/install_nfs_server.sh
            chmod a+x /tmp/format_shared_disk.sh
            chmod a+x /tmp/configure_monit_monitor_nfs_server.sh
            chmod a+x /usr/local/bin/monit_notify_slack
            /tmp/install_nfs_server.sh
      Tags:
      - Key: Application
        Value: Precita NFS Server
      - Key: Name
        Value: Precita-Stage-NFSStack-NFSServer
  PrecitaSharedMountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      Device: /dev/xvdh
      InstanceId: !Ref NFSServer
      VolumeId: !Ref PrecitaSharedVolume
Outputs:
  NFSServerPrivateIPAddress:
    Description: NFS Server Private IP Address
    Value: !GetAtt NFSServer.PrivateIp
  NFSServerAvailabilityZone:
    Description: NFS Server Availability Zone
    Value: !GetAtt NFSServer.AvailabilityZone